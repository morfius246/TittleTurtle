@model TitleTurtle.Models.ShowArticle


@{
    ViewBag.Title = "Show";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<head>
    <title>@Model.CurrentArticle.ArticleTitle</title>
</head>
<body>
    @using (Html.BeginForm("ShowArticle", "Home"))
    {
        <div class="main">
            <h2>@Html.DisplayFor(model => model.Article.ArticleTitle)</h2>
            @Html.HiddenFor(model => model.Article.ArticleID)
            @Html.Raw(Model.Article.ArticleText);
            @if (Model.CurrentArticle.MedialInArticles.Count != 0)
            {
                try
                {
                    @Html.Raw("<img style='width:260px; height:180px;' src=\"data:image/jpeg;base64,"
                                                                          + Convert.ToBase64String(Model.Article.MedialInArticles.First().Media.MediaData) + "\" />")
                }
                catch (Exception)
                {

                }
            }
            <br>
            <p>Добавил:@Model.Article.User.UserFirstName</p>
            <p>Дата создания: @Model.Article.Edits.ElementAt(0).Date</p>
            @if (Model.Article.Edits.Count() > 1)
            {
                <p>
                    Дата последнего изменения:
                    @Model.Article.Edits.ElementAt(Model.Article.Edits.Count() - 1).Date
                </p>
            }
            <p style="color:chartreuse">@Model.Article.Ratings.ElementAt(0).RatingLike</p>
            <p style="color:crimson">@Model.Article.Ratings.ElementAt(0).RatingDislike</p>
            <p>@{int p = Model.Article.Ratings.ElementAt(0).RatingLike - Model.Article.Ratings.ElementAt(0).RatingDislike;}@p</p>
            
            @Html.ActionLink("UpVote",
                                 "Vote",
                                 "Home",
                                 new { _id = Model.Article.ArticleID.ToString(), up = true },
                                 null)
            <br />
            @Html.ActionLink("DownVote",
                    "Vote",
                    "Home",
                    new { _id = Model.Article.ArticleID.ToString(), up = false },
                    null)

        </div>
    }
    <h2>Комментарии</h2>

    @using (Html.BeginForm("CreateComment", "Home", FormMethod.Post))
    {
        <input type="hidden" name="currentArticle.ArticleID" value=@Model.CurrentArticle.ArticleID.ToString() />
        <input type="hidden" name="CommentList" value=@Model.CommentList />
        <input type="hidden" name="Username" value=@User.Identity.Name />
        <fieldset>
            <legend>Добавить комментарий</legend>

            @User.Identity.Name, введите сообщение:
            <br />
            @Html.TextAreaFor(model => model.NewComment.Article.ArticleText)
            <br />
            <input type="submit" value="Отправить" name="Username" />

        </fieldset>
    }
    <script>
        function clickIt() {
            $("#sub").click();
        }
    </script>
    <h3>Все записи</h3>
    @foreach (var item in Model.CommentList)
    {
        <div style="background-color:silver; padding:3px; margin:5px;">

            <p>
                @item.Article.ArticleText
            </p>
            @*using(Html.BeginForm("Delete","Home",FormMethod.Post))
                {
                <input id='sub' type="submit" value=@item.Article.ArticleID name="CommentID" hidden="true">
                <input type="button" value="delete" name="CommentID" onclick="clickIt()">
                }*@
        </div>

    }

</body>